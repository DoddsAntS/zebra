<?php
namespace cms\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Meta Setup
 * @ORM\Entity
 * @ORM\HasLifecycleCallbacks
 * @ORM\Table(name="meta_items")
 * @package Page
 * @author adodds
 */
class Meta extends Entity {
    
    /**
     *
     * @var integer $id autogenerated id
     * @ORM\Column(name="id", type="integer",nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;
    
    /**
     *
     * @var boolean
     * @ORM\Column(type="boolean",nullable=false)
     */
    private $active;
    
    /**
     *
     * @var datetime
     * @ORM\Column(type="datetime",nullable=false) 
     */
    private $modifiedDate;
    
    /**
     *
     * @var datetime
     * @ORM\Column(type="datetime",nullable=false) 
     */
    private $addDate;
    
    /**
     * 
     * @var integer
     * @ORM\Column(type="integer",nullable=true)
     */
    private $precidence;
    
    /**
     * @ORM\OneToMany(targetEntity="\cms\Entity\Meta\Key",mappedBy="meta",cascade={"persist","remove"})
     */
    private $keys;
    
    
    public function __get($what = '') {
        return $this->{$what};
    }
    
    public function __set($what, $value) {
        $this->{$what} = $value;
    }
    
    public function __construct() {
        parent::__construct();
        $this->keys = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Prepersist Function
     * @ORM\PrePersist 
     */
    public function prePersist() {
        if(!($this->addDate instanceof \DateTime)) {
            $this->addDate = new \DateTime();
        }
        $this->modifiedDate = new \DateTime();
    }
}